NEXT:
	- continue refactor, see docstring on ln: 504
	- week view, implement how a months worth of days would get parsed
	
	- try a design pattern
	- try a simple decorator

OUTLINE BIG:
	> CODE READING 
	> WEEK VIEW 
	> SYNC CALENDAR
	> SCHEDULING
	> NEW USER

EMAILS:
	Casey / Corey Mentorship program
	Double Quotes to single
	Make a branch of Lumo that goes deeper into OOP
	When you type 'back' on Near Cards it shows the previous card that has moved
	Try coding in Micro one day
	Put some of my money in a local bank
	Pip install to target
	CLIG.dev
	

SCHEDULE / CALENDAR!!!
	- propagate default values to calendar page

	- should selecting an event on the chosen day show a new screen?
		- I think so, but we can do it both ways to see...
	
	- it should be able to retrieve a years worth of events from google, then it can just check for differences to see if events have updated between the calendars...
	- offline calendar API?
	- collect object from google cal and incorporate into 'event list'

	
	- user can schedule cards
	- user can view already scheduled events / calendar events
	- user can toggle events from scheduled to non-scheduled
	- calendar mode: d[1], w[2], m[3]
	- select day from [a], [b], [c]

	- is there an issue with the Google API for 'primary' calendars?
	- all the shit with repeating events...!
	- if a card is repeating event in GCal or LumoCal, it should have one instance as a .txt file
	- how is the calendar aware in different contexts?
	- deleting a card from google deletes the card in Lumo
	- deleting a card from Lumo deletes the card in Google
	- all this for recurring cards

	- how should I move backward and forward in days? what should be 'loaded'? how/when should loading happen?

	- how should I handle cases where there is no internet? what is the 'offline' mode
		-flagging data for upload
		-upload / sync manager 
	- can you have more than one calendar added?
	- how to make token / credentials persistent?
		-automatically delete the token and re-apply credentials?

**  put tape on my keyboard for better finding of l ctrl and alt.

	SHORTCUTS/FORMATTING:
	- calendar shortcuts: go to "next week" etc.
	- calendar shortcuts: go to: dec 25
	- calendar shortcuts: go to 1/25/2022
	- calendar shortcuts: to december
	- see shortcuts created in LibreOffice:
	> time? 8-9 
	> time? 8 1h
	> time? 8 default
	> from week mode: 21, 8p-9p, dinner with Jamie (first part=the day, second part=time, third part=event name)
	> a -> schedule to that day ...
		> what time? 8:30p-
			> confirm 8:00 Am – 9:00 Pm or (8:00 Am – 9:00 Pm?)

	- how would a user make a quick scheduled card like: newcard r dinner with sam, tue @ 8a (blank would be default length of one hour)
	- how would a user make a quick scheduled card like: newcard r dinner with sam, 12/01/2020 @ 8a-9a
	- how would a user make a quick scheduled card like: newcard r dinner with sam, aug 01 @ 8a +2
	
	- standard menu should be one item at a time (try one format at a time for testing)
		-event name? dinner with Sam
		-event start? 8a | 8am | 8:30a | 8 am | 20:00 | 20:31 
		-event end? ( blank=defaul +1 ) | +1=do the math | 9a | etc. 
		-etc...

	

	EDGE CASES:
	- 
	- how do events that start one day and flow into the next work?
	- how does calendar display conflicting?
	- what happens in between weeks of two different months? (does it always start on first?)
	- how does it account for this?


-- LUMO (ALL)
	--  you can refactor newcard so that it uses default args from argparse...
	--  at some point you should use types in your functions
	--  enum vs. str as input to a function
	--  should a card with a lowercase name still show it's title (using format card title?)
	--  should there be an option to make a newcard after making a newcard?
	--  should the 'macro menu' have an option to be able to menu jump to recurring cards? (I think so...)
	--  difference of 'case' vs. 'elif/if'
	--  see if you can have someone look at your code?
	--  look into python generator?? for pomodoro?


	--  can lumocards have a version where it shows in paren() the location of the found card when it's previewing the card from the 1...2...3... menu?
	--  spend a few hours one morning going through the playsound python package
	--  is it possible to use part of ffmpeg, ffplay, pyaudio?

	--  can lumo aliases be renamed to "lumo cardsrun" and "lumo newcard" etc?
	**  make micro have the function to shift+space move over one char
	**  find out how to 'tab through options' in oh my bash (maybe watch a tutorial on this)
	**  find out how to filter by portion of the word rather than starting
	**  modify lumo_install.sh so that it checks whether or not 'lumo_runtime' is activated...

--  INSTALLATION NEW USERS??? (continued)
	- requires python
	- user downloads a tar or compressed folder
	- then script installs a vitual environment +
		- pip installs the package to the virtual environment
		- then exports the environment script to /usr/bin
		- then .toml file creates and entry point for the 'Lumo' program that can load all the different lumo fucntions
		- then show a demo video
		- show what settings are available
	
	-make a toml file, export function to script
	-see micro, how does it do it? (look at my email examples)
	-should it be installable from pip?
	-pip install to target?
	-the installation should be one call to install.sh etc. (cross platform)
	-the installation should ideally then allow users to call "lumo" from any location in the terminal
	-maybe the project then is in /usr/bin?
	-otherwise it adds the project folder to the path and cds the user there?
		- I want people to be able to put the LUMO folder anywhere, but be able to call the program from
		the command line anywhere, but it's basically just scripts...
	-it just needs to be an easy to use program otherwise why bother?

	-what is __init__.py and should I be using this?
	-explain to users what kinds of cards there are and how they work
	-what happens when you make the API public/external for people?
	-how should 'Z_CREDENTIALS' work when uninitilized?
		-ok when they first setup lumo and add credentials it makes a file in Z_CREDENTIALS called 'creds.json'
		- this file is also linked to settings.json
		- note: the user cannot then manually rename the credentials file without issue!
		- I feel like this is still not a robust implementation
	-how will the app handle updates for users?
		-say for a bug or if the json needs to change?
	-how would people set this up for google api?
	-should it auto load 'micro?' is this possible???
	-should it be able to configure a text editor based on 'settings?'
	-should there be an interface to work with settings?
	-settings feature for updating the names of categories
	-intro to explain settings
	-introduction feature to have user set up caterogires, one at a time
	-intro to set user birthday
	-what if the user wants to change the names of categories? 
	-lumo_install.sh should be able to set up a calendar credentials, or guide people
	-export something like usr/bin/lumo

--  make a function called clean up which ensures that all cards are matched with json card, and if not gives options...
--  cards should show their location in the menus! i.e. 
	  P PAINTING (NEAR, SCHEDULED)
	  (RECURRING CARD, EVERY 2 DAYS)
	  (CHECKLIST CARD)
	  (MIDDLE FOCUS CARD)
	  (MIDDLE FOCUS CARD, SCHEDULED)


**  does an MIT license require payment if I charge for my app that uses a package?
	  
--  find a mentor, or get feedback on some way to make your education better; you don't know what you don't know


**  learn about testing


--  you should be able to 'cancel' out of recurring card menu
--  continue refactor for menus!
		-consolidate
		-dict comprehensions / print formatting from dicts
--  figure out how to format text inside boxes to be left aligned
--  rewrite the alphabetizer_2.py file to work again
--  ensure that minimum for recurring cards settings = 2 days


--  what happens if you name a card with numbers in it?
--  when adding custom steps, make sure to fill in remainder with '...'
	i.e. you add just one custome step, it should auto-fill two more lines of '...'
--  a feature that would check to make sure that all .txt files had the proper format of L_Title
	-so that in case a user renames the card in a file explorer the system can catch it rather than breaking?
	
**  alias vs. cmd in bash scripting
--  make a feature that allows users to display archived cards from search
--  set up some rules to the animations :)

**  can you install python3 to the venv for users who don't have python3?
**  can you install micro?
**  how will users decide on a text editor? how to test it's working? 
**  can another person port this to windows?
**  am I going to add something to /usr/bin/? 
**  what is going to be the simplest way so that people can either open it in terminal or with desktop entry? 
**  currently: lumo is a script in usr/local/bin which can be called with . lumo. This can reference the 'lumo_runtime' which pretty good becuase it gives you one button press to activate...The question is how would I make that script for people with the install

**  basics of bash scripting?
	-can you first check if they have python3 on their system in the bash script
--  set as checklist card should be a menu item for 'modify' menu
--  should locard be able to do 'locard term1 term2'?

--  are recurring cards just repeating events that don't go on a calendar? no, because
	  recurring cards keep showing up until you complete them

--  are there separate versions of lumo that have scheduled cards with Google and locally scheduled?	  
--  understand better the way the recurring and calendar and focused cards relate...
	  -if a near focus card is scheduled, is that different than middle focus?
	  -can a near focus card be in google calendar as repeating event, every day?
	  -can a near focus card be in google calendar as repeating event?


--  'BACK' fucntion vs. 'UNDO'
--  have cards retain their order when relooping 'get_remaining_cards'
--  Make 'back' work
--  Make all hotkey word shortcuts work
--  allow locard to work on it's own with addnl args?
--  refactor so that lumo aliases are like 'lumo newcard' etc. 'lumo runcards' so that it's consistent

--  have locard use a dict rather than list indeces...
--  global 'suitcase' is maybe not so smart?

--  implement 'r+' mode when modifying cards, and 'w+' when creating?
--  should paths be relative?

--  the logic of the functions in cards run feels like it could be clearer with how many statuses are being passed around

--  should you be able to type 'q' in any menu to quit for example when searching for a term in 'locard' typing 'q' will act as search. Should 'q' be added to negative use responses?

**  try out fzf and see if it works good enough

'CALENDAR' w/ textualize?
'RENAMING' etc. all menus should work or be aware of what people are doing

--  there should be a way in lumocards to display the help menu, i.e. the hotkey words as well as the shortcut letters i.e. --help
--  where else should you be able to type 'help'?
--  feature to schedule viewing middle focus cards per set amount of time

--  issue with how after you 'show full' card if you try to edit it, it won't work?
--  feature: non destructive step completion; 


---  feature: separate a step from a list into its own card
---  fuzzy hotkey matching?
---  archive steps in place feature to look at non-active, 
---  "Lumo Night" → is when yu rurecap card "Lumo Night" is when you edit cards to 
---  install from folder, or make standalone app
---  feature to be able to toggle completed steps from being 'active' or 'in focus' and completed for now.
---  basics of lumogarden implement scroll from lumocards3 
---  settings for Lumo

--- lumogarden outlines fill in information
--- design the ticking clock in blender, or affinity designer
--- feature for formatting text output of lumocards

---- feature for visually impaired, how does lumocards work as a fully sound designed app?




















